{"ast":null,"code":"var _jsxFileName = \"/Users/noahmaizels/Desktop/Videotastic/frontend/pages/index.js\";\nvar __jsx = React.createElement;\nimport React, { useEffect, useState } from 'react';\nimport fetch from 'node-fetch';\n\nfunction HomePage() {\n  const {\n    0: loginInfo,\n    1: setLoginInfo\n  } = useState({\n    \"username\": '',\n    \"password\": ''\n  });\n  const {\n    0: currentUser,\n    1: setCurrentUser\n  } = useState({\n    username: null\n  });\n  useEffect(() => {\n    console.log(document.cookie); // fetch('http://localhost:3000/currentuser', {\n    //   credentials: 'include', \n    //   headers: {\n    //     'Origin': 'http://localhost:3001/'\n    //   },\n    // })\n    // .then(res => {\n    //   return res.json()\n    // })\n    // .then(json => {\n    //   setCurrentUser({username: json.username})\n    // })\n    // .catch(err => {\n    //   console.log(err)\n    //  })\n  }, []);\n\n  const handleSubmit = evt => {\n    evt.preventDefault();\n    fetch('http://localhost:3000/login', {\n      method: 'POST',\n      // *GET, POST, PUT, DELETE, etc.\n      mode: 'cors',\n      // no-cors, *cors, same-origin\n      cache: 'no-cache',\n      // *default, no-cache, reload, force-cache, only-if-cached\n      credentials: 'include',\n      // include, *same-origin, omit\n      headers: {\n        'Content-Type': 'application/json' // 'Origin': 'http://localhost:3001/'\n        // 'Content-Type': 'application/x-www-form-urlencoded',\n\n      },\n      redirect: 'follow',\n      // manual, *follow, error\n      referrerPolicy: 'no-referrer',\n      // no-referrer, *no-referrer-when-downgrade, origin, origin-when-cross-origin, same-origin, strict-origin, strict-origin-when-cross-origin, unsafe-url\n      body: JSON.stringify(loginInfo) // body data type must match \"Content-Type\" header\n\n    }); // .then(res => res.json())\n    // .then(body => {\n    //   if(body.jwt) Document.cookie = {'jwt': body.jwt}\n    // })\n    // setLoginInfo({\"username\": '', \"password\": ''})\n  };\n\n  const handleFormChange = evt => {\n    let newInfo = Object.assign({}, loginInfo);\n    newInfo[evt.target.name] = evt.target.value;\n    setLoginInfo(newInfo);\n  };\n\n  const handleLogOut = () => {\n    document.cookie = \"jwt=''\";\n    setCurrentUser({\n      username: null\n    });\n  };\n\n  return __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 3\n    }\n  }, \"Welcome to Videotastic\", currentUser.username ? ` ${currentUser.username}!` : \"!\", __jsx(\"form\", {\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 5\n    }\n  }, __jsx(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }\n  }, \"Username:\", __jsx(\"input\", {\n    onChange: handleFormChange,\n    type: \"text\",\n    name: \"username\",\n    value: loginInfo.username,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 9\n    }\n  })), __jsx(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }\n  }, \"Password:\", __jsx(\"input\", {\n    onChange: handleFormChange,\n    type: \"password\",\n    name: \"password\",\n    value: loginInfo.password,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 9\n    }\n  })), __jsx(\"input\", {\n    type: \"submit\",\n    value: \"Login\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }\n  })), __jsx(\"button\", {\n    onClick: handleLogOut,\n    type: \"button\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 5\n    }\n  }, \"Log out\"));\n}\n\nexport default HomePage;","map":{"version":3,"sources":["/Users/noahmaizels/Desktop/Videotastic/frontend/pages/index.js"],"names":["React","useEffect","useState","fetch","HomePage","loginInfo","setLoginInfo","currentUser","setCurrentUser","username","console","log","document","cookie","handleSubmit","evt","preventDefault","method","mode","cache","credentials","headers","redirect","referrerPolicy","body","JSON","stringify","handleFormChange","newInfo","Object","assign","target","name","value","handleLogOut","password"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport fetch from 'node-fetch'\n\nfunction HomePage() {\n  \n  const [loginInfo, setLoginInfo] = useState({\"username\": '', \"password\": ''})\n  const [currentUser, setCurrentUser] = useState({username: null})\n  \n  useEffect(() => {\n    console.log(document.cookie)\n    // fetch('http://localhost:3000/currentuser', {\n    //   credentials: 'include', \n    //   headers: {\n    //     'Origin': 'http://localhost:3001/'\n    //   },\n    // })\n    // .then(res => {\n    //   return res.json()\n    // })\n    // .then(json => {\n    //   setCurrentUser({username: json.username})\n    // })\n    // .catch(err => {\n    //   console.log(err)\n    //  })\n    \n  }, []);\n\n  const handleSubmit = (evt) => {\n    evt.preventDefault();\n    fetch('http://localhost:3000/login', {\n      method: 'POST', // *GET, POST, PUT, DELETE, etc.\n      mode: 'cors', // no-cors, *cors, same-origin\n      cache: 'no-cache', // *default, no-cache, reload, force-cache, only-if-cached\n      credentials: 'include', // include, *same-origin, omit\n      headers: {\n        'Content-Type': 'application/json',\n        // 'Origin': 'http://localhost:3001/'\n        // 'Content-Type': 'application/x-www-form-urlencoded',\n      },\n      redirect: 'follow', // manual, *follow, error\n      referrerPolicy: 'no-referrer', // no-referrer, *no-referrer-when-downgrade, origin, origin-when-cross-origin, same-origin, strict-origin, strict-origin-when-cross-origin, unsafe-url\n      body: JSON.stringify(loginInfo) // body data type must match \"Content-Type\" header\n    })\n    // .then(res => res.json())\n    // .then(body => {\n    //   if(body.jwt) Document.cookie = {'jwt': body.jwt}\n    // })\n    // setLoginInfo({\"username\": '', \"password\": ''})\n  }\n  \n  const handleFormChange = (evt) => {\n    let newInfo = Object.assign({}, loginInfo)\n    newInfo[evt.target.name] = evt.target.value\n    setLoginInfo(newInfo)\n  }\n\n  const handleLogOut = () => {\n    document.cookie = \"jwt=''\"\n    setCurrentUser({username: null})\n  }\n  return (\n  <div>\n    Welcome to Videotastic{currentUser.username ? ` ${currentUser.username}!` : \"!\"}\n    <form onSubmit={handleSubmit}>\n      <label>\n        Username: \n        <input onChange={handleFormChange} type=\"text\" name=\"username\" value={loginInfo.username}/>\n      </label>\n      <label>\n        Password: \n        <input onChange={handleFormChange} type=\"password\" name=\"password\" value={loginInfo.password} />\n      </label>\n      <input type=\"submit\" value=\"Login\" />\n    </form>\n    <button onClick={handleLogOut} type=\"button\">Log out</button>\n  </div>\n  )\n}\n\nexport default HomePage"]},"metadata":{},"sourceType":"module"}